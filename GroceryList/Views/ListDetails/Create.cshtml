@model GroceryList.Models.ListDetail

@{
    ViewBag.Title = "Create";
}
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.3/themes/smoothness/jquery-ui.css">

@section Scripts {
 



    <script src="https://maps.googleapis.com/maps/api/js?libraries=places"></script>

    <script src="~/Scripts/store-locator.min.js"></script>

    <script src="~/Scripts/places.js"></script>

<style>
     .ui-autocomplete {
         max-height: 100px;
         overflow-y: auto;
         /* prevent horizontal scrollbar */
         overflow-x: hidden;
     }
     /* IE 6 doesn't support max-height
    * we use height instead, but this forces the menu to always be this tall
    */
      html .ui-autocomplete {
         height: 100px;
     }

     .hidden {
         display: none;
     }
</style>
@Scripts.Render("~/Scripts/jquery-ui-1.11.4.min.js")
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/Scripts/jquery.dataTables.min.js")
@Scripts.Render("~/Scripts/dataTables.bootstrap.js")
@Styles.Render("~/Content/dataTables.bootstrap.css")
<script type="text/javascript">

        $(document).ready(function () {
            $('#myDataTable').DataTable();
            $("#StoreNameTwo").val($('.storerow:nth-last-child(1)').children('td:nth-last-child(2)').text());
            $('#productSearch').autocomplete({
                source: '@Url.Action("GetProduct")',
                focus: function (event, ui) {
                    $("#productSearch").val(ui.item.ProductName);
                    return false;
                },
                select: function (event, ui) {
                    $('#ProductId').val(ui.item.ProductId);
                    return false;
                }

            })
            .autocomplete("instance")._renderItem = function (ul, item) {
                return $("<li>")
                  .append("<a>" + item.ProductName + "</a>")
                  .appendTo(ul);
            }
        
    });
</script>




    @**@
    <link href="~/Content/storelocator.css" rel="stylesheet" />

<style>
 

    #map-canvas, #panel {
        height: 500px;
    }

    #panel {
        width: 330px;
        float: left;
        margin-right: 10px;
    }

        #panel .feature-filter label {
            width: 130px;
        }

    p.attribution, p.attribution a {
        color: #666;
    }
</style>
<script>



    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-12846745-20']);
    _gaq.push(['_trackPageview']);



    (function () {

        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' === document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
</script>

    }
<br />

<div id="panel"></div>
<div id="map-canvas"></div>
<br />

<br />


<h2>Make A List</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>My List</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ListId, "List", htmlAttributes: new { @class = "hidden" })
            <div class="col-md-10">
                @Html.DropDownList("ListId", null, htmlAttributes: new { @class = "hidden" })
                @Html.ValidationMessageFor(model => model.ListId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductId, "Product", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("search", null, new { id = "productSearch" })
                @*@Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control", id="productSearch" })*@
                @Html.HiddenFor(model => model.ProductId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StoreId, "Store", htmlAttributes: new { @class = "hidden" })
            <div class="col-md-10">
                @Html.DropDownList("StoreId", null, htmlAttributes: new { @class = "hidden" })
                @Html.ValidationMessageFor(model => model.StoreId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StoreNameTwo, "Store", htmlAttributes: new { @class = "hidden" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.StoreNameTwo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StoreNameTwo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<table id="myDataTable" class="table table-striped table-bordered" cellspacing="0" width="100%">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Product.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product.Category)
            </th>
            <th>
                Store
            </th>
            <th>
                Options
            </th>
        </tr>
    </thead>
    @foreach (var item in ViewBag.GroceryList)
    {
        <tr class="storerow">
            <td>
                @item.Product.ProductName
            </td>
            <td>
                @item.Product.Category.CategoryName
            </td>
            <td class="storename">
                @item.StoreNameTwo
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ListDetailsId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ListDetailsId })
            </td>
        </tr>

    }
</table>
<div>
    @Html.ActionLink("Back to List", "Create")
</div>

@Scripts.Render("~/Scripts/jquery-1.10.2.min.js")

<script>

    $("#panel").click(function () {
        $("#StoreNameTwo").val($(".highlighted").first().children().first().children($(".title")).text());
      
    });

</script>


